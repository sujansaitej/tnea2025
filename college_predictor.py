category_list = [
    ['COMPUTER SCIENCE AND ENGINEERING', 'COMPUTER SCIENCE AND ENGINEERING (SS)'],
    ['INFORMATION TECHNOLOGY', 'INFORMATION TECHNOLOGY (SS)', 'INFORMATION SCIENCE & TECHNOLOGY'],
    ['COMPUTER SCIENCE AND BUSSINESS SYSTEM', 'COMPUTER SCIENCE AND BUSSINESS SYSTEM (SS)'],
    ['COMPUTER SCIENCE AND ENGINEERING (ARTIFICIAL INTELLIGENCE AND MACHINE LEARNING)', 'COMPUTER SCIENCE AND ENGINEERING (ARTIFICIAL INTELLIGENCE AND MACHINE LEARNING) (SS)'],
    ['ARTIFICIAL INTELLIGENCE AND DATA SCIENCE', 'ARTIFICIAL INTELLIGENCE AND DATA SCIENCE (SS)'],
    ['CIVIL ENGINEERING', 'CIVIL ENGINEERING (SS)'],
    ['ELECTRONICS AND COMMUNICATION ENGINEERING', 'ELECTRONICS AND COMMUNICATION ENGINEERING (SS)'],
    ['ELECTRICAL AND ELECTRONICS ENGINEERING', 'ELECTRICAL AND ELECTRONICS ENGINEERING (SS)', 'ELECTRICAL AND ELECTRONICS (SANDWICH) (SS)'],
    ['MECHANICAL ENGINEERING (TAMIL MEDIUM)'],
    ['CIVIL ENGINEERING (TAMIL MEDIUM)'],
    ['INDUSTRIAL ENGINEERING'],
    ['MANUFACTURING ENGINEERING'],
    ['M.TECH. COMPUTER SCIENCE AND ENGINEERING (INTEGRATED 5 YEARS)'],
    ['MECHANICAL ENGINEERING', 'MECHANICAL ENGINEERING (SS)', 'MECHANICAL ENGINEERING (SANDWICH) (SS)'],
    ['MECHATRONICS ENGINEERING'],
    ['ROBOTICS AND AUTOMATION', 'ROBOTICS AND AUTOMATION (SS)'],
    ['METALLURGICAL ENGINEERING', 'METALLURGICAL ENGINEERING (SS)'],
    ['PRODUCTION ENGINEERING', 'PRODUCTION ENGINEERING (SS)', 'PRODUCTION ENGINEERING (SANDWICH) (SS)'],
    ['FOOD TECHNOLOGY', 'FOOD TECHNOLOGY (SS)'],
    ['BIO TECHNOLOGY', 'BIO TECHNOLOGY (SS)', 'INDUSTRIAL BIO TECHNOLOGY', 'INDUSTRIAL BIO TECHNOLOGY (SS)'],
    ['ARTIFICIAL INTELLIGENCE AND MACHINE LEARNING'],
    ['AUTOMOBILE ENGINEERING'],
    ['BIO MEDICAL ENGINEERING', 'BIO MEDICAL ENGINEERING (SS)']
]

def category(course):
    for category in category_list:
        if course in category:
            return category
    return [course]

def list_of_colleges(mark, course, community, data):
    course_final = category(course)
    filtered_data = data[data['Branch Name'].isin(course_final) & (data[community] <= (mark + 5))]
    result = filtered_data[['College Code', 'College Name','Branch Code', 'Branch Name' , community]]
    result = result.sort_values(by=community, ascending=False)
    return result